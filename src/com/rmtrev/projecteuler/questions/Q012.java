package com.rmtrev.projecteuler.questions;

/**
 * <b>Highly divisible triangular number</b>
 * 
 * <p>The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:</p>
 * 
 * <p><i>1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...</i></p>
 * 
 * <p>Let us list the factors of the first seven triangle numbers:</p>
 * <p><pre>
 *      1: 1
 *      3: 1,3
 *      6: 1,2,3,6
 *     10: 1,2,5,10
 *     15: 1,3,5,15
 *     21: 1,3,7,21
 *     28: 1,2,4,7,14,28
 * </pre></p>
 * 
 * <p>We can see that 28 is the first triangle number to have over five divisors.</p>
 * 
 * <p>What is the value of the first triangle number to have over five hundred divisors?</p>
 * 
 * @author rmt
 *
 */
public class Q012 implements IQuestion
{
	private static int MIN_NUM_DIVISORS = 500;
	
	@Override
	public void Run(String[] args) throws Exception
	{
		int answer;
		int n = 1;
		
		while(true)
		{
			int triNum = generateTriangleNumber(n);
			int numDivisors = 0;
			
			int curLimit = triNum;
			for(int i = 1; i < curLimit; i++)
			{
				if(triNum % i == 0)
				{
					if(triNum / i == i)
					{
						numDivisors++;
					}
					else
					{
						numDivisors += 2;
					}
					
					curLimit = triNum / i;
				}
			}
			
			if(numDivisors > MIN_NUM_DIVISORS)
			{
				answer = triNum;
				break;
			}
			
			n++;
		}
		
		System.out.println(Integer.toString(answer));
	}
	
	private int generateTriangleNumber(int n)
	{
		int sum = 0;
		for(int i = 1; i <= n; i++)
		{
			sum += i;
		}
		
		return sum;
	}
}
